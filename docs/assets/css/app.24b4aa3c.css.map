{"version":3,"sources":["webpack:///src/components/C:/Users/John Meyer/wats4000-mtg-final/src/components/src/components/CardViewer.vue","app.24b4aa3c.css","webpack:///src/components/C:/Users/John Meyer/wats4000-mtg-final/src/components/src/components/MessageItem.vue","webpack:///src/components/C:/Users/John Meyer/wats4000-mtg-final/src/components/src/components/MessageContainer.vue","webpack:///src/components/C:/Users/John Meyer/wats4000-mtg-final/src/components/src/components/CircleLoader.vue","webpack:///src/views/C:/Users/John Meyer/wats4000-mtg-final/src/views/src/views/CardFinder.vue","webpack:///src/C:/Users/John Meyer/wats4000-mtg-final/src/src/App.vue","webpack:///src/views/C:/Users/John Meyer/wats4000-mtg-final/src/views/src/views/BoosterSim.vue"],"names":[],"mappings":"AAoBA,IACA,qDClBA,CDoBA,SACA,WClBA,CDoBA,MACA,oBAAA,CACA,UClBA,CCwBA,0BACA,WAAA,CACA,YAAA,CACA,cDpBA,CCsBA,wBACA,WAAA,CACA,aAAA,CACA,kBAAA,CACA,SAAA,CACA,eDpBA,CEAA,oBACA,oBAAA,CACA,SFYA,CGpBA,iBACA,gBAAA,CACA,UAAA,CACA,iBHwBA,CGvBA,2BACA,UAAA,CACA,WAAA,CACA,qBAAA,CACA,kBAAA,CACA,oBAAA,CACA,mEAAA,CACA,2DHyBA,CGxBA,6BACA,6BAAA,CACA,qBH0BA,CGzBA,6BACA,6BAAA,CACA,qBH2BA,CGzBA,mCACA,UACA,0BAAA,CACA,kBH2BA,CG1BA,IACA,0BAAA,CACA,kBH4BA,CACA,CG3BA,2BACA,UACA,0BAAA,CACA,kBH6BA,CG5BA,IACA,0BAAA,CACA,kBH8BA,CACA,CIUA,oBACA,oBJJA,CIOA,6BACA,UAAA,CACA,oBJLA,CIQA,kCACA,UJNA,CKhFA,KACA,6CAAA,CACA,kCAAA,CACA,iCAAA,CACA,iBAAA,CACA,aAAA,CACA,eLqFA,CMNA,oBACA,oBNUA,CMPA,6BACA,UAAA,CACA,oBNSA,CMNA,kCACA,UNQA","file":"app.24b4aa3c.css","sourcesContent":["<template>\r\n    <div class=\"card\">\r\n        <img v-if=\"image !== undefined\" :src=\"image\">\r\n        <div v-else><img src=\"../../card-back.jpg\"></div>\r\n        <h4> {{name}} </h4>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'card',\r\n    props: [\"name\", \"image\"],\r\n    data () {\r\n        return {\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.h4 {\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\r\n}\r\nimg.card {\r\n    width: 200px;\r\n}\r\n.card {\r\n    display: inline-block;\r\n    margin: 4px;\r\n}\r\n</style>","\n.h4 {\r\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\nimg.card {\r\n    width: 200px;\n}\n.card {\r\n    display: inline-block;\r\n    margin: 4px;\n}\r\n\n\n.message[data-v-643c62f6] {\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  font-size: 1rem;\n}\n.error[data-v-643c62f6] {\r\n    width: 300px;\r\n    margin: 0 auto;\r\n    background: lightgrey;\r\n    color: red;\r\n    font-weight: 600;\n}\r\n/* .success {\r\n  background: green;\r\n  color: white;\r\n}\r\n.info {\r\n  background: blue;\r\n  color: white;\r\n} */\r\n\n\nul[data-v-7df282a2] {\r\n  list-style-type: none;\r\n  padding: 0;\n}\r\n\n\n.sk-three-bounce {\r\n  margin: 40px auto;\r\n  width: 80px;\r\n  text-align: center;\n}\n.sk-three-bounce .sk-child {\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: #333;\r\n    border-radius: 100%;\r\n    display: inline-block;\r\n    -webkit-animation: sk-three-bounce 1.4s ease-in-out 0s infinite both;\r\n            animation: sk-three-bounce 1.4s ease-in-out 0s infinite both;\n}\n.sk-three-bounce .sk-bounce1 {\r\n    -webkit-animation-delay: -0.32s;\r\n            animation-delay: -0.32s;\n}\n.sk-three-bounce .sk-bounce2 {\r\n    -webkit-animation-delay: -0.16s;\r\n            animation-delay: -0.16s;\n}\n@-webkit-keyframes sk-three-bounce {\n0%, 80%, 100% {\r\n    -webkit-transform: scale(0);\r\n            transform: scale(0);\n}\n40% {\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1);\n}\n}\n@keyframes sk-three-bounce {\n0%, 80%, 100% {\r\n    -webkit-transform: scale(0);\r\n            transform: scale(0);\n}\n40% {\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1);\n}\n}\r\n\r\n/* Spinner animation and markup borrowed from SpinKit by @tobiasahlin - http://tobiasahlin.com/spinkit/ */\r\n\n\nul[data-v-3d92f299] {\r\n  list-style-type: none;\n}\n.no-results[data-v-3d92f299] {\r\n    clear: none;\r\n    display: inline-block;\n}\n.results-message[data-v-3d92f299] {\r\n    clear: both;\n}\r\n\r\n\n\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\n}\r\n\n\nul[data-v-637ce035] {\r\n  list-style-type: none;\n}\n.no-results[data-v-637ce035] {\r\n    clear: none;\r\n    display: inline-block;\n}\n.results-message[data-v-637ce035] {\r\n    clear: both;\n}\r\n\r\n\n\n/*# sourceMappingURL=app.24b4aa3c.css.map*/","<template>\r\n  <transition name=\"fadeDown\" appear tag=\"div\">\r\n    <li v-bind:class=\"[message.type, 'message']\" v-show=\"showMessage\">\r\n      {{ message.text }}\r\n      <button v-on:click=\"close\">close</button>\r\n    </li>\r\n  </transition>\r\n</template>\r\n\r\n<script>\r\nrequire('vue2-animate/dist/vue2-animate.min.css');\r\n// Each Message Item expects a `message` object.\r\n// Each message should have the following properties:\r\n// message.type - A string indicating the type. Either \"info\", \"success\", or \"error\"\r\n// message.text - The text of the message. Text only, no HTML formatting.\r\nexport default {\r\n  name: 'MessageContainer',\r\n  props: {\r\n    message: Object\r\n  },\r\n  data () {\r\n    return {\r\n      showMessage: true\r\n    }\r\n  },\r\n  methods: {\r\n    close: function () {\r\n      this.showMessage = false;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.message {\r\n  margin: 1rem;\r\n  padding: 1rem;\r\n  font-size: 1rem;\r\n}\r\n.error {\r\n    width: 300px;\r\n    margin: 0 auto;\r\n    background: lightgrey;\r\n    color: red;\r\n    font-weight: 600;\r\n}\r\n/* .success {\r\n  background: green;\r\n  color: white;\r\n}\r\n.info {\r\n  background: blue;\r\n  color: white;\r\n} */\r\n</style>","\r\n<template>\r\n  <div>\r\n    <ul v-if=\"messages.length > 0\">\r\n        <message-item v-for=\"msg in messages\" v-bind:message=\"msg\" v-bind:key=\"msg.text\"></message-item>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MessageItem from '@/components/MessageItem';\r\nrequire('vue2-animate/dist/vue2-animate.min.css');\r\nexport default {\r\n  name: 'MessageContainer',\r\n  props: {\r\n    messages: Array\r\n  },\r\n  components: {\r\n    'message-item': MessageItem\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n</style>","<template>\r\n    <div>\r\n        <h2>Loading...</h2>\r\n        <div class=\"sk-three-bounce\">\r\n            <div class=\"sk-child sk-bounce1\"></div>\r\n            <div class=\"sk-child sk-bounce2\"></div>\r\n            <div class=\"sk-child sk-bounce3\"></div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'CircleLoader'\r\n}\r\n</script>\r\n\r\n<style>\r\n.sk-three-bounce {\r\n  margin: 40px auto;\r\n  width: 80px;\r\n  text-align: center; }\r\n  .sk-three-bounce .sk-child {\r\n    width: 20px;\r\n    height: 20px;\r\n    background-color: #333;\r\n    border-radius: 100%;\r\n    display: inline-block;\r\n    -webkit-animation: sk-three-bounce 1.4s ease-in-out 0s infinite both;\r\n            animation: sk-three-bounce 1.4s ease-in-out 0s infinite both; }\r\n  .sk-three-bounce .sk-bounce1 {\r\n    -webkit-animation-delay: -0.32s;\r\n            animation-delay: -0.32s; }\r\n  .sk-three-bounce .sk-bounce2 {\r\n    -webkit-animation-delay: -0.16s;\r\n            animation-delay: -0.16s; }\r\n\r\n@-webkit-keyframes sk-three-bounce {\r\n  0%, 80%, 100% {\r\n    -webkit-transform: scale(0);\r\n            transform: scale(0); }\r\n  40% {\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1); } }\r\n\r\n@keyframes sk-three-bounce {\r\n  0%, 80%, 100% {\r\n    -webkit-transform: scale(0);\r\n            transform: scale(0); }\r\n  40% {\r\n    -webkit-transform: scale(1);\r\n            transform: scale(1); } }\r\n\r\n/* Spinner animation and markup borrowed from SpinKit by @tobiasahlin - http://tobiasahlin.com/spinkit/ */\r\n</style>","<template>\r\n    <div class=\"finder\">\r\n        <h1>Magic: The Gathering Card Finder</h1>\r\n        <form v-on:submit.prevent=\"findCards\">\r\n            <p>Look for a card by filling out the form below</p>\r\n            <ul>\r\n                <li><label>Name <input v-model=\"cardName\" type=\"text\" placeholder=\"Nissa\"></label></li>\r\n                <li><label>CMC <input v-model=\"cardCMC\" type=\"number\" placeholder=\"5\"></label></li>\r\n                <li><label>Type <input v-model=\"cardType\" type=\"text\" placeholder=\"Creature\"></label></li>\r\n            </ul>\r\n            <button type=\"submit\">Go</button>\r\n        </form>\r\n\r\n        <router-link to=\"/boosterSim\">Try the Booster Pack Simulator</router-link>\r\n\r\n        <div class=\"results-message\">\r\n            <loader v-if=\"showLoader === true\"></loader>\r\n            <div v-else-if=\"searches !==0 && results.cards.length === 0\" class=\"no-results\">\r\n                <h2>No Cards Found</h2>\r\n                <p>Please adjust your search and try again</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"messages\">\r\n            <message-container v-bind:messages=\"messages\"></message-container>\r\n        </div>\r\n        \r\n        <transition-group name=\"fade\" tag=\"div\" appear>\r\n        <CardViewer v-for=\"item in results.cards\" :key=\"item.id\" :name=\"item.name\" :image=\"item.imageUrl\" :cmc=\"item.cmc\" :type=\"item.types\"></CardViewer>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios';\r\n    import CardViewer from '@/components/CardViewer'\r\n    //Note: SDK is not currently utilized\r\n    const mtg = require('mtgsdk')\r\n    // Note: vue2-animate is added using the require statement because it is a CSS file\r\n    require('vue2-animate/dist/vue2-animate.min.css');\r\n    import MessageContainer from '@/components/MessageContainer';\r\n    import CircleLoader from '@/components/CircleLoader';\r\n\r\n    export default {\r\n        name: \"finder\",\r\n        components: {\r\n            CardViewer,\r\n            'message-container': MessageContainer,\r\n            loader: CircleLoader\r\n        },\r\n        data () {\r\n            return {\r\n                results: [],\r\n                messages: [],\r\n                cardName: '',\r\n                cardCMC: null,\r\n                searches: 0,\r\n                showLoader: false,\r\n                cardType: ''\r\n            }\r\n        },\r\n        methods: {\r\n            findCards: function () {\r\n                this.showLoader = true;\r\n                axios.get('https://api.magicthegathering.io/v1/cards/',{\r\n                    params: {\r\n                        name: this.cardName,\r\n                        cmc: this.cardCMC,\r\n                        type: this.cardType\r\n                    }\r\n                })\r\n                .then(response =>{\r\n                    this.results = response.data\r\n                    console.log(response)\r\n                    this.showLoader = false;\r\n                })\r\n                .catch(error =>{\r\n                    this.showLoader = false;\r\n                    this.messages.push({\r\n                        type: 'error',\r\n                        text: error.message\r\n                    });\r\n                })\r\n                //hides inital no cards message\r\n                this.searches++;\r\n\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\nul {\r\n  list-style-type: none;\r\n}\r\n\r\n.no-results {\r\n    clear: none;\r\n    display: inline-block;\r\n}\r\n\r\n.results-message {\r\n    clear: both;\r\n}\r\n\r\n</style>","<template>\r\n  <div id=\"app\">\r\n    <img alt=\"Vue logo\" src=\"./assets/logo.png\">\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport CardFinder from './views/CardFinder.vue'\r\n\r\nexport default {\r\n  name: 'app',\r\n}\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #2c3e50;\r\n  margin-top: 60px;\r\n}\r\n</style>\r\n","<template>\r\n    <div class=\"simulator\">\r\n        <h1>Magic: The Gathering Booster Pack Simulator</h1>\r\n        <form v-on:submit.prevent=\"getPack\">\r\n            <p>Pick a set to generate a random Booster Pack</p>\r\n            <em>Not all sets are currently supported, You may recieve an error</em>\r\n            <br>\r\n            <select v-model.trim=\"setName\">\r\n                <option v-for=\"option in setOptions\" :key=\"option.id\" v-bind:value=\"option.value\">\r\n                    {{ option.text }}\r\n                </option>\r\n            </select>\r\n            <span>SetCode: {{setName}}</span>\r\n            <button type=\"submit\">Go</button>\r\n        </form>\r\n\r\n        <router-link to=\"/\">Go back to Card Search</router-link>\r\n\r\n        <div class=\"results-message\">\r\n            <loader v-if=\"showLoader === true\"></loader>\r\n            <div v-else-if=\"searches !==0 && results.cards && results.cards.length === 0\" class=\"no-results\">\r\n                <h2>No Cards Found</h2>\r\n                <p>Please adjust your search and try again</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"messages\">\r\n            <message-container v-bind:messages=\"messages\"></message-container>\r\n        </div>\r\n        \r\n        <transition-group name=\"fade\" tag=\"div\" appear>\r\n        <CardViewer v-for=\"item in results.cards\" :key=\"item.id\" :name=\"item.name\" :image=\"item.imageUrl\"></CardViewer>\r\n        </transition-group>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from 'axios';\r\n    import CardViewer from '@/components/CardViewer'\r\n    //Note: SDK is not currently utilized\r\n    const mtg = require('mtgsdk')\r\n    // Note: vue2-animate is added using the require statement because it is a CSS file\r\n    require('vue2-animate/dist/vue2-animate.min.css');\r\n    import MessageContainer from '@/components/MessageContainer';\r\n    import CircleLoader from '@/components/CircleLoader';\r\n\r\n    export default {\r\n        name: \"simulator\",\r\n        components: {\r\n            CardViewer,\r\n            'message-container': MessageContainer,\r\n            loader: CircleLoader\r\n        },\r\n        data () {\r\n            return {\r\n                results: [],\r\n                messages: [],\r\n                setName: '',\r\n                searches: 0,\r\n                showLoader: false,\r\n                selected: 'none',\r\n                setOptions: [\r\n                { text: 'Khans of Tarkir', value: 'ktk' },\r\n                { text: 'Time Spiral', value: 'tsp'},\r\n                { text: 'Unglued', value: 'UGL'},\r\n                { text: 'Amonkhet', value:'AKH'},\r\n                { text: 'Aether Revolt', value: 'AER'},\r\n                { text: 'Battle for Zendikar', value: 'BFZ'},\r\n                { text: 'Ixalan', value: 'XLN'}\r\n                ]\r\n            }\r\n        },\r\n        methods: {\r\n            getPack: function () {\r\n                this.showLoader = true;\r\n                console.log('set test begin')\r\n                //Note: Backticks are needed to make variable call\r\n                axios.get(`https://api.magicthegathering.io/v1/sets/${this.setName}/booster`)\r\n                .then(response =>{\r\n                    this.results = response.data\r\n                    console.log(response)\r\n                    this.showLoader = false;\r\n                    this.setName = '';\r\n                })\r\n                .catch(error =>{\r\n                    this.showLoader = false;\r\n                    this.messages.push({\r\n                        type: 'error',\r\n                        text: error.message\r\n                    });\r\n                    this.setName = '';\r\n                })\r\n                //hides inital no cards message\r\n                this.searches++;\r\n\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\nul {\r\n  list-style-type: none;\r\n}\r\n\r\n.no-results {\r\n    clear: none;\r\n    display: inline-block;\r\n}\r\n\r\n.results-message {\r\n    clear: both;\r\n}\r\n\r\n</style>"]}